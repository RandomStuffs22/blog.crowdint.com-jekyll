<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Crowd Interactive Tech Blog</title>
 <link href="http://blog.crowdint.com/atom.xml" rel="self"/>
 <link href="http://blog.crowdint.com/"/>
 <updated>2011-09-28T01:39:12-05:00</updated>
 <id>http://blog.crowdint.com/</id>
 
 
 <entry>
   <title>Using rbenv to manage your rubies</title>
   <link href="http://blog.crowdint.com/2011/09/30/using-rbenv-for-managing-your-rubies.html"/>
   <updated>2011-09-30T00:00:00-05:00</updated>
   <id>http://blog.crowdint.com/2011/09/30/using-rbenv-for-managing-your-rubies</id>
   <photo>6be5df410f2695b1341f0c359bc9b461</photo>
   <content type="html">&lt;p&gt;While working with ruby, you have some alternatives to manage your binaries,
but as you think of them, I hope you are not really considering delegating this
task directly to your OS package manager since it is discouraged, otherwise you
would end up with a messy workstation.&lt;/p&gt;

&lt;p&gt;There are a few tools that allow you to manage your rubies and gems, the most
popular among them is without doubts &lt;a href=&quot;http://beginrescueend.com/&quot;&gt;RVM&lt;/a&gt;
(Ruby Version Manager) which in all fairness is good, it provides a CLI to
switch between your rubies and gemsets. If you haven't used RVM, you should
read &lt;a href=&quot;http://blog.crowdint.com/2010/07/28/getting-started-with-rvm.html&quot;&gt;this&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Even when RVM is great there are a couple things that I don't like about it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Personally, I had a painful situation as Linux user, every time I wanted to
get a fresh ruby version with support for readline and zlib libraries and its
dependencies.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Its gemset management feature tends duplicate gems across your projects. I
get it, sometimes you need to isolate your gems to keep them compatible. But
there is another player in the field, called bundler. (mention down below)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Plus that last bullet, some colleages have mentioned having a 5~6 GB .rvm
folder.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;A couple days ago, I was struggling tracking down a gem that I wasn't sure
where exactly came from, anyway I was about to create a new gemset for a fresh
started when someone adviced me to check out rbenv.&lt;/p&gt;

&lt;h2&gt;The rbenv way&lt;/h2&gt;

&lt;p&gt;A highlight in favor of rbenv is that you don't actually need to worry about
maintaing your gemsets, since it relays on &lt;a href=&quot;http://gembundler.com/&quot;&gt;bundler&lt;/a&gt;
who takes care of all your application dependencies. Letting you care about
just the version of the ruby you want to use globally, locally and in a per
project basis. Let's check out &lt;a href=&quot;http://gituhub.com/ssthepenson/rbenv&quot;&gt;rbenv&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;RVM and rbenv aren't friends :(&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;First of all, you better avoid using both in the same environment because they
are incompatible. Don't say I didn't warn you.&lt;/p&gt;

&lt;h2&gt;Installation&lt;/h2&gt;

&lt;h3&gt;1. Get rid of RVM by running:&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rvm implode
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h3&gt;2. To install rbenv, must be at ~ and clone it:&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone git://github.com/sstephenson/rbenv.git ~/.rbenv
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h3&gt;3. Add scope for rbenv binaries to your $PATH&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;export PATH=&amp;quot;$HOME/.rbenv/bin:$PATH&amp;quot;&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; .bash_profile
&lt;span class=&quot;c&quot;&gt;# be sure of do this to your bash source file (e.g. .bashrc, .profile)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h3&gt;4. Setup bash autocompletion:&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;eval &amp;quot;$(rbenv init -)&amp;quot;&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; .bash_profile
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h3&gt;5. Restart your shell.&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;There are two ways of installing rubies with rbenv. From source and &lt;em&gt;make it&lt;/em&gt;
into &quot;~/.rbenv/versions/&amp;lt;x.x.x-pxxx&gt;&quot; or the one I prefer using &lt;em&gt;ruby-build&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;6. Install ruby-build&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone git://github.com/sstephenson/ruby-build.git ~/.ruby-build
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/.ruby-build
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./install.sh
&lt;span class=&quot;c&quot;&gt;# you may need to run with sudo, since it installs a binary in /usr/local/bin&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h3&gt;7. Install a ruby&lt;/h3&gt;

&lt;p&gt;Now, we are ready to install a ruby.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; After a couple times trying to get a ruby with readline support
for my &lt;em&gt;irb&lt;/em&gt;, I googled and found a way.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;For Ubuntu&lt;/em&gt; I used my readline path:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ CONFIGURE_OPTS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;--with-readline-dir=/usr/include/readline&amp;quot;&lt;/span&gt; rbenv
install 1.9.3-preview1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;And there we go, we give it some time, get a coffee or play a ping pong
match. Once it rbenv finishes, and every time after installing a ruby
you need to run:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rbenv rehash
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;I have to mention, that it seems tricky, but you can set an alias in
your &lt;code&gt;~/.bash_profile&lt;/code&gt; or export an environment variable.&lt;/p&gt;

&lt;h2&gt;Usage&lt;/h2&gt;

&lt;p&gt;Let's suposse you've got some more rubies, now, how do we specify the
version of ruby we want to use:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;To setup a global ruby you do something like:&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rbenv global 1.9.3-preview1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;To setup a local (per-project) ruby you do:&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rbenv &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;1.9.2-p290
&lt;span class=&quot;c&quot;&gt;# this creates a rbenv-version file in the current folder&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;What version of ruby am I using?&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rbenv version
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;What versions of ruby do I have?&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rbenv versions
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h2&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;There are a couple things that remain unexplored, but for now this is a getting
started. In case you miss the gemset, &lt;a href=&quot;http://github.com/jamis/rbenv-gemset&quot;&gt;this&lt;/a&gt;
is something you might want to look at.&lt;/p&gt;

&lt;p&gt;So, give it a try, you might like it. For now I'm happy with my fresh
rbenv install.&lt;/p&gt;
</content>
   <author>
     <name>Ignacio Galindo</name>
     <email>ignacio.galindo@crowdint.com</email>
   </author>
 </entry>
 
 <entry>
   <title>Ruby benchmarks</title>
   <link href="http://blog.crowdint.com/2011/09/05/ruby-benchmarks.html"/>
   <updated>2011-09-05T00:00:00-05:00</updated>
   <id>http://blog.crowdint.com/2011/09/05/ruby-benchmarks</id>
   <photo>d32b52ec6403614b1adf3e648cbbe584</photo>
   <content type="html">&lt;p&gt;I recently started a new client project. Lucky me, &lt;a href=&quot;http://weblog.rubyonrails.org/2011/8/31/rails-3-1-0-has-been-released&quot;&gt;Rails 3.1 has just
been released&lt;/a&gt;
so, it means I'll get to learn a bunch of things while
building it, you know, the fancy &lt;a href=&quot;http://guides.rubyonrails.org/asset_pipeline.html&quot;&gt;asset pipeline&lt;/a&gt;
stuff everyone's talking about and so on.&lt;/p&gt;

&lt;p&gt;I wrote a couple of rspec specs and cucumber features, made them pass, and
while I was about to start new features, decided to stop to check the
current state of all the different rubies to try them and pick the
faster one, at least for development.&lt;/p&gt;

&lt;p&gt;Well, I was already using &lt;em&gt;MRI 1.9.2&lt;/em&gt;, so, for research purposes
I proceeded to install &lt;em&gt;MRI 1.9.3-preview&lt;/em&gt;, &lt;em&gt;Rubinus 1.2.5dev&lt;/em&gt;, &lt;em&gt;REE-1.8.7&lt;/em&gt; and
&lt;em&gt;jRuby 1.6.3&lt;/em&gt;. (Thank you &lt;a href=&quot;http://beginrescueend.com/&quot;&gt;RVM&lt;/a&gt; for making this as
easy as possible).&lt;/p&gt;

&lt;p&gt;Now, so far, my app has 4 rspec specs and 3 cucumber scenarios, but
even so, I came up with interesting time results.&lt;/p&gt;

&lt;p&gt;Below the results of running &lt;em&gt;time rake&lt;/em&gt; for each
implementation.&lt;/p&gt;

&lt;h2&gt;MRI 1.9.2&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Rspec&lt;/span&gt;
Finished in 0.13588 seconds
4 examples, 0 failures

&lt;span class=&quot;c&quot;&gt;# Cucumber&lt;/span&gt;
3 scenarios &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3 passed&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
10 steps &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;10 passed&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
0m0.756s

&lt;span class=&quot;c&quot;&gt;# Time&lt;/span&gt;
real    0m24.259s
user    0m20.752s
sys 0m2.530s
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h2&gt;MRI 1.9.3-preview&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Rspec&lt;/span&gt;
Finished in 0.05074 seconds
4 examples, 0 failures

&lt;span class=&quot;c&quot;&gt;# Cucumber&lt;/span&gt;
3 scenarios &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3 passed&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
10 steps &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;10 passed&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
0m0.379s

&lt;span class=&quot;c&quot;&gt;# Time&lt;/span&gt;
real    0m13.354s
user    0m10.120s
sys 0m1.546s
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h2&gt;jRuby&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# RSpec&lt;/span&gt;
Finished in 0.186 seconds
4 examples, 0 failures

&lt;span class=&quot;c&quot;&gt;# Cucumber&lt;/span&gt;
3 scenarios &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3 passed&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
10 steps &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;10 passed&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
0m2.141s

&lt;span class=&quot;c&quot;&gt;# Time&lt;/span&gt;
real    1m3.823s
user    2m9.875s
sys 0m7.005s
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h2&gt;Rubinus&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# RSpec&lt;/span&gt;
Finished in 0.27061 seconds
4 examples, 0 failures

&lt;span class=&quot;c&quot;&gt;# Cucumber&lt;/span&gt;
3 scenarios &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3 passed&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
10 steps &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;10 passed&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
0m2.011s

&lt;span class=&quot;c&quot;&gt;# Time&lt;/span&gt;
real    0m47.328s
user    1m1.049s
sys 0m2.938s
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h2&gt;REE&lt;/h2&gt;

&lt;p&gt;Note that I used the following environment variables for this one:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;RUBY_GC_MALLOC_LIMIT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;50000000&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;RUBY_HEAP_MIN_SLOTS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;500000&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;RUBY_HEAP_SLOTS_GROWTH_FACTOR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;RUBY_HEAP_SLOTS_INCREMENT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;250000&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;To understand how this affects its performance, check out &lt;a href=&quot;http://blog.crowdint.com/2010/12/07/improving-your-dev-life-with-ree.html&quot;&gt;this post&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# RSpec&lt;/span&gt;
Finished in 0.05163 seconds
4 examples, 0 failures

&lt;span class=&quot;c&quot;&gt;# Cucumber&lt;/span&gt;
3 scenarios &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3 passed&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
10 steps &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;10 passed&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
0m0.277s

&lt;span class=&quot;c&quot;&gt;# Time&lt;/span&gt;
real    0m10.769s
user    0m7.519s
sys 0m2.106s
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;It looks like there's huge speed improvements from 1.9.2 to 1.9.3. It took
24 seconds on 1.9.2 and 12 on 1.9.3, that's a lot of speed boost!&lt;/p&gt;

&lt;p&gt;JRuby, at 1 minute where the other rubies took seconds is light years
behind them, though, I might be doing something wrong. I really have no practical
experience with it and I just benchmarked it out of the box.&lt;/p&gt;

&lt;p&gt;Rubinus felt kind of slow too, but, I consider it to be
work in progress, or at least haven't heard of production apps running
on it yet, which doesn't necesarily mean there aren't any. I'd actually
love to use it on production for a few weeks when we launch this app
just to see how it behaves in real life.&lt;/p&gt;

&lt;p&gt;And last but not least, a properly configured REE kicks butt. No surprise there, we've been using it
on another app on production for a year now with good performance and no
problems at all so far.&lt;/p&gt;

&lt;p&gt;So, there it is. I realize it is a small benchmark, but perhaps I can
revisit it when we have more specs and more features to see if that
changes how the rubies behave.&lt;/p&gt;

&lt;p&gt;Cheers!&lt;/p&gt;
</content>
   <author>
     <name>David Padilla</name>
     <email>david@crowdint.com</email>
   </author>
 </entry>
 
 <entry>
   <title>Auto Retry Failed Cucumber Tests</title>
   <link href="http://blog.crowdint.com/2011/08/22/auto-retry-failed-cucumber-tests.html"/>
   <updated>2011-08-22T00:00:00-05:00</updated>
   <id>http://blog.crowdint.com/2011/08/22/auto-retry-failed-cucumber-tests</id>
   <photo>f7412b373affd1d6db10752cf5d69315</photo>
   <content type="html">&lt;p&gt;If you're tired of having to re-kick builds in your CI server because of non deterministic failures,
this post is for you.
After I implemented this awesome feature our builds started to be more realistic,
and developers actually care now if their branch is red.&lt;/p&gt;

&lt;p&gt;I'm going to show you how I got to the point where failed cucumber features auto retry themselves.
I started to dig into the cucumber documentation and I couldn't find how to implement an auto retry feature straightforward.
After being a curious developer and reading some of the cucumber code I found that there was a formatter named 'rerun', this is so nice!
I went back to the cucumber documentation and I found that it was almost what I was looking for
and that I could use it straight in my cucumber profiles:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#config/cucumber.yml&lt;/span&gt;
selenium: --format pretty --format rerun --out tmp/rerun.txt features/selenium --require features/selenium/step_definitions --require features/selenium/support
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;It can receive an extra parameter --out, this is used to store failed tests along with the line number, awesome!!, isn't it?&lt;/p&gt;

&lt;p&gt;Ok, now I had the ability to track failed tests and store them in a txt file, now what's next? I started to think how my rake task
would look like, parsing the file and those ugly things, but I was sure that this problem had been already solved, it was as simple
as run 'cucumber --help' in command line to find out, and guess what?&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cucumber --help
Usage: cucumber &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;options&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;FILE|DIR|URL&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;:LINE&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;:LINE&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;*&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;+

Examples:
cucumber examples/i18n/en/features
cucumber @rerun.txt &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;See --format rerun&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
cucumber examples/i18n/it/features/somma.feature:6:98:113
cucumber -s -i http://rubyurl.com/eeCl
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;Whooohooo, it accepts the file generated by the rerun formatter!!! so now I tried this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cucumber @tmp/rerun.txt --format pretty features/selenium --require features/selenium/step_definitions --require features/selenium/support
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;And, it worked!... it took failed tests and ran them! Cool, now I had to integrate this with our cucumber rake tasks.&lt;/p&gt;

&lt;p&gt;I thought it'd be easy, so I started with a rerun rake task:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:cucumber&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;

  &lt;span class=&quot;no&quot;&gt;Cucumber&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Rake&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:rerun&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Rerun failed cucumber tests&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exist?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;tmp/rerun.txt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;tmp/rerun.txt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;w+&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rerun&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;Doh! I ran it and failed because I didn't specify the 'rerun' profile in cucumber.yml, easy to fix:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#config/cucumber.yml&lt;/span&gt;
selenium: --format pretty --format rerun --out tmp/rerun.txt features/selenium --require features/selenium/step_definitions --require features/selenium/support
rerun: @tmp/rerun.txt --format pretty features/selenium --require features/selenium/step_definitions --require features/selenium/support
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;Done, I got my 'rake cucumber:rerun' task and it worked just fine. My next step was to include this in 'rake cucumber:all' and, theoretically
if the selenium profile failed, it'd execute rerun task and retry failed tests,  but! it exited after the selenium profile
failed and the task finished right away. Then I thought, of course! it works how it's supposed to work,
it exits when it fails, so it was not that easy.&lt;/p&gt;

&lt;p&gt;This was the tricky part, because I had to wrap this task up in a huge begin rescue block, I ended up implementing my own
super sophisticated task runner:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;run_rake_task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;begin&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;Rake&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;invoke&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;Cool, it wraps up my tasks and catches the error, I had everything I needed, so I created another rake task:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:cucumber&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;desc&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Run selenium and rerun failed tests&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:selenium_with_retry&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;selenium_successful&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;run_rake_task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;cucumber:selenium&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rerun_successful&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selenium_successful&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;rerun_successful&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;run_rake_task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;cucumber:rerun&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selenium_successful&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rerun_successful&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CucumberFailure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Cucumber tests failed&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;Done! I just replaced this new task in our main rake cruise task, and bingo! It now auto retries failed cucumber tests.&lt;/p&gt;

&lt;p&gt;I know it has a lot of opportunity areas, but hopefully this helps to somebody else to get their builds green!&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;
</content>
   <author>
     <name>Edwin Cruz</name>
     <email>edwin.cruz@crowdint.com</email>
   </author>
 </entry>
 
 <entry>
   <title>How to install Postgresql 8.4 in a Vagrant box</title>
   <link href="http://blog.crowdint.com/2011/08/11/postgresql-in-vagrant.html"/>
   <updated>2011-08-11T00:00:00-05:00</updated>
   <id>http://blog.crowdint.com/2011/08/11/postgresql-in-vagrant</id>
   <photo>29612de9aa10447dc2f9ec84cf2ab1b2</photo>
   <content type="html">&lt;p&gt;If you don't know what Vagrant is, go read our &lt;a href=&quot;http://blog.crowdint.com/2011/06/21/vagrant.html&quot;&gt;first post about it&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Ok, we've been using &lt;code&gt;Vagrant&lt;/code&gt; to manage our servers and services for a while, and we love it.
It's clean, easy and we don't mess with our original systems.
Last week we started a new proyect that uses &lt;code&gt;postgresql&lt;/code&gt;, so we tried doing the common &lt;code&gt;apt-get install postgresql&lt;/code&gt;
but nothing seemed to work, there is a &lt;a href=&quot;http://vagrantup.com/docs/provisioners/introduction.html&quot;&gt;chef&lt;/a&gt; recipe,
but it looks like it has some issues and we didn't have enough time to do the research.
In one word: Frustration.&lt;/p&gt;

&lt;p&gt;So, what did we do?, we installed it with our bare hands, step by step.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;Let's start!&lt;/h2&gt;

&lt;p&gt;Start your vagrant box.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;you&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vagrant up
you&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vagrant ssh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h2&gt;1) Fixing the 'Please check that your locale settings' error&lt;/h2&gt;

&lt;p&gt;Seems like the current box from vagrant have issues with postgres &amp;amp; lang settings. Easy to fix..&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;vagrant&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo vim /etc/bash.bashrc

&lt;span class=&quot;c&quot;&gt;# Add this lines to the bottom:&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;LANGUAGE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;en_US.UTF-8
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;LANG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;en_US.UTF-8
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;LC_ALL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;en_US.UTF-8
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;Save &amp;amp; Exit. Then run these commands:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;vagrant&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo locale-gen en_US.UTF-8
vagrant&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo dpkg-reconfigure locales
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;Ok, now your system has configured the default LANG. No more 'LANG=C' error.&lt;/p&gt;

&lt;h2&gt;2) Install postgres 8.4, and the comunity extras&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;vagrant&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo apt-get install postgresql postgresql-contrib; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;Add postgres's binaries to the PATH.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;vagrant&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo nano /etc/bash.bashrc

&lt;span class=&quot;c&quot;&gt;# Add this lines to the file:&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:/usr/lib/postgresql/8.4/bin/
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PGDATA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/pgsql/data
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;Save &amp;amp; Exit. Ok, now you can run &lt;code&gt;postgres --version&lt;/code&gt; and other postgresql executables.
Also, you've defined the default data folder, you will need that soon (1).&lt;/p&gt;

&lt;h3&gt;Setup postgres's user, and data folder.&lt;/h3&gt;

&lt;p&gt;Postgresql server should be started by his own system user,
and it have been created by the installation but using a random password.
Now you'll change that password.&lt;/p&gt;

&lt;p&gt;Change postgres's password.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;vagrant&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo su
root# passwd postgres
&lt;span class=&quot;c&quot;&gt;# Type a new password, like &amp;#39;postgres&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;Init postgres data structure, and create the storage folder&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;root# mkdir /usr/local/pgsql/data
root# chown postgres /usr/local/pgsql/data
root# su postgres
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;Init the data folder&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;postgres&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;initdb -D /usr/local/pgsql/data
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Note (1): Make sure this is the same directory as your &lt;code&gt;PGDATA&lt;/code&gt; variable.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;3) Enable remote connections&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;postgres&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vim /usr/local/pgsql/data/postgres.conf

&lt;span class=&quot;c&quot;&gt;# Change this `listen_address=&amp;#39;localhost&amp;#39;` to&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;listen_address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;Save &amp;amp; exit.&lt;/p&gt;

&lt;h3&gt;Enable access from local network&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;postgres&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nano /usr/local/pgsql/data/pg_hba.conf

&lt;span class=&quot;c&quot;&gt;# Vagrant uses 33.33.33.10 like addresses&lt;/span&gt;
host all all 33.33.33.0/24 trust
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;Save &amp;amp; exit.&lt;/p&gt;

&lt;h3&gt;Start server&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;vagrant&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;su postgres
postgres&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;postgres
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h2&gt;Done.&lt;/h2&gt;

&lt;p&gt;Congrats!&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;Extras&lt;/h2&gt;

&lt;h3&gt;Notes:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You can stop the server pressing &lt;code&gt;ctrl + C&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;You can start the server in background using &lt;code&gt;postgres$ postgres &amp;amp;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;You must start postgresql using postgres user.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;You could improve this post saying how to start postgresql as a service, would you?&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;GUI admin?&lt;/h3&gt;

&lt;p&gt;Now you can install tools like &lt;code&gt;pgAdmin3&lt;/code&gt; to manage your postgresql server and databases directly from your host.
It's multiplatform and free.&lt;/p&gt;

&lt;h3&gt;References:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.postgresql.org/docs/8.4/static/creating-cluster.html&quot;&gt;Official postgres documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://bookmarks.honewatson.com/2009/05/30/perl-warning-please-check-that-your-locale-settings-ubuntu/&quot;&gt;About the locale error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.pgadmin.org/&quot;&gt;Download pgAdmin 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Mom&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Disclamer &amp;amp; feedback&lt;/h2&gt;

&lt;p&gt;Please note that all of these steps have been &lt;code&gt;discovered&lt;/code&gt; by us entirely with some help of google's special powers...
feel free to add comments if you know of a better way to do something, or if there is a mistake
that need to be remarked. Also, if you are using Ubuntu, you probably won't need all of these steps,
as Ubuntu provides the server with all the structure, and preconfigured files.&lt;/p&gt;

&lt;p&gt;Also, we should write another post describing how to use a Chef recipe for this
avoiding all this s**t... And it shall be called, &lt;code&gt;The Easy Way&lt;/code&gt;, coming soon.&lt;/p&gt;

&lt;h2&gt;Stay tuned!&lt;/h2&gt;

&lt;h3&gt;-Mario&lt;/h3&gt;
</content>
   <author>
     <name>Mario Zaizar</name>
     <email>mario@crowdint.com</email>
   </author>
 </entry>
 
 <entry>
   <title>Acceptance testing with Steak</title>
   <link href="http://blog.crowdint.com/2011/07/06/acceptance-testing-with-steak.html"/>
   <updated>2011-07-06T00:00:00-05:00</updated>
   <id>http://blog.crowdint.com/2011/07/06/acceptance-testing-with-steak</id>
   <photo>2f2bc78de007915554f49c3ea0fef125</photo>
   <content type="html">&lt;p&gt;Acceptance testing is a technique that helps determine if the requirements of
our application are met. There are several frameworks to help us with this.
One of the most popular is Cucumber, in which you practically describe in plain English
your stories, but you also have to code a lot of steps in order for your tests to work.&lt;/p&gt;

&lt;p&gt;To avoid this, and just test your features in Ruby, we have Steak,
which works very well with Rspec.
To use it you only need to put this on your Gemfile:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:development&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:test&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;steak&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;Then run the bundle install command and after that install steak&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bundle install
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rails g steak:install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;Steak will create the acceptance folder inside your specs directory. This is where
all your acceptance tests will be placed.
Now, to create your test, you need to run the command&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rails g steak:spec my_first_steak_test
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;This will create a file with the basic structure of your test, and now you are
ready to start coding!&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;acceptance/acceptance_helper&amp;#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;feature&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Steak feature&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%q{&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;  In order to ...&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;  As a ...&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;  I want ...&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;scenario&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;first scenario&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;should&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;As you can see it starts pretty much as a Cucumber feature, where you can describe
what your feature is about and what should every scenario do.&lt;/p&gt;

&lt;p&gt;Here's a small feature to test a form in an application.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expand_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;__FILE__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/acceptance_helper&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;feature&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Add Products to Store&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%q{&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;  In order to add products in my store&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;  As an admin&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;  I want to create a product&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;background&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;login_user!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;admin@example.com&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;scenario&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Add products to store&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;visit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_product_path&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;should&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;have_css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;form&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fill_the_following&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;s1&quot;&gt;&amp;#39;Name&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;New Product&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s1&quot;&gt;&amp;#39;Description&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Fantastic product&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s1&quot;&gt;&amp;#39;Price&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;32.00&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;click_link_or_button&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Create Product&amp;#39;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;should&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;have_css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;div&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Your product has been created&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;As you can see the syntax is pretty easy and looks a lot like Rspec. The cool thing
is that Steak creates a support folder inside the acceptance directory, where you
have your helpers.rb file and the paths.rb file.&lt;/p&gt;

&lt;p&gt;In the helpers.rb file you can put all the methods you need to run your test,
methods that you might end up using a lot among all your specs, like the one in the
example login_user!&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;login_user!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;visit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;homepage&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;click_link_or_button&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Log In&amp;#39;&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;fill_the_following&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&amp;#39;Email&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&amp;#39;Password&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;click_link_or_button&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Log In&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;For paths, you can put directly the route like in the example, or you can define your
own named routes in the paths.rb file, like&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create_product&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;/products/new&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;Hope this little guide will help you as an introduction to the Steak world!
Which in my opinion is not difficult nor totally different from Cucumber, I think
its even easier, because it comes with a lot of helpers and methods to check the
styles and contents in your page.&lt;/p&gt;

&lt;p&gt;The other thing I like about Steak, as I mentioned at the beginning of this post, is
that you get rid of tons of steps definitions, you just write down methods for
the repeated steps you take in all of your tests.&lt;/p&gt;

&lt;p&gt;Thanks for reading and happy testing!&lt;/p&gt;
</content>
   <author>
     <name>Ana Rosas</name>
     <email>ana@crowdint.com</email>
   </author>
 </entry>
 
 <entry>
   <title>Rails 3.1, Compass and Blueprint</title>
   <link href="http://blog.crowdint.com/2011/06/27/rails-3-1-compass-and-blueprint.html"/>
   <updated>2011-06-27T00:00:00-05:00</updated>
   <id>http://blog.crowdint.com/2011/06/27/rails-3-1-compass-and-blueprint</id>
   <photo>d32b52ec6403614b1adf3e648cbbe584</photo>
   <content type="html">&lt;p&gt;So, we all know that Rails 3.1 comes with a Sass compiler. But still,
there are a few of us that used &lt;a href=&quot;http://compass-style.org/&quot;&gt;compass&lt;/a&gt; on
most of our pre 3.1 projects not just
because of the sass, but because of the &lt;a href=&quot;http://www.blueprintcss.org/&quot;&gt;blueprint&lt;/a&gt;
integration.&lt;/p&gt;

&lt;p&gt;Well, it's very easy to use Compass with Rails 3.1 and get all those
Blueprint mixins for your stylesheets.&lt;/p&gt;

&lt;p&gt;All you have to do is, add the compass gem to your Gemfile:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;compass&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;git&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;https://github.com/chriseppstein/compass.git&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rails31&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;The trick here is that you have to use the compass edge version from git, and
the &lt;em&gt;rails31&lt;/em&gt; branch currently under development.&lt;/p&gt;

&lt;p&gt;This might change in future compass releases, but for now, this is the
only way.&lt;/p&gt;

&lt;p&gt;Now, create a &lt;em&gt;blueprint.css.scss&lt;/em&gt; file on &lt;em&gt;app/assets/stylesheets&lt;/em&gt; with
the following contents:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;  &lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;_blueprint&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;@include&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;blueprint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;This file will just be used to load the blueprint css framework onto our
stylesheet files.&lt;/p&gt;

&lt;p&gt;Now, on &lt;em&gt;app/assets/stylesheets/application.css&lt;/em&gt; make sure you require
the file that you just created by adding it right after &lt;em&gt;require_self&lt;/em&gt;
in the manifest:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;  &lt;span class=&quot;o&quot;&gt;*=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;require_self&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;*=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;blueprint&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;*=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;require_tree&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;And, that's it. Now you'll be able to use all the usual blueprint mixins
on your Rails 3.1 stylesheets.&lt;/p&gt;

&lt;p&gt;Hope this helps you somehow.&lt;/p&gt;
</content>
   <author>
     <name>David Padilla</name>
     <email>david@crowdint.com</email>
   </author>
 </entry>
 
 <entry>
   <title>Vagrant to manage multiple dev environments</title>
   <link href="http://blog.crowdint.com/2011/06/21/vagrant.html"/>
   <updated>2011-06-21T00:00:00-05:00</updated>
   <id>http://blog.crowdint.com/2011/06/21/vagrant</id>
   <photo>29612de9aa10447dc2f9ec84cf2ab1b2</photo>
   <content type="html">&lt;p&gt;Lets start rocking like a pro. Installing services (like mysql, redis, mongo) in your own
machine is old fashioned. They won't let you handle different versions, or different
configurations, and most of the time your dev machine isn't the same as your production server.
That's why Vagrant is there for us.&lt;/p&gt;

&lt;p&gt;Vagrant allows you to create different virtualized machines, easy and separated from your
computer internals. So, you can handle all your dev environments (dev, stage, production)
including specific versions of all servers and services.&lt;/p&gt;

&lt;p&gt;For example, I'm currently working on two different projects, and both use
&lt;a href=&quot;http://mongodb.org&quot;&gt;mongodb&lt;/a&gt; as the primary database locked with different
(and incompatible) versions.&lt;/p&gt;

&lt;p&gt;So, I've started using Vagrant to handle that. When I need one version, I just start the box
that contains that server, and I don't mess with my system. That's why Vagrant is so important.&lt;/p&gt;

&lt;p&gt;It uses &lt;a href=&quot;http://virtualbox.org&quot;&gt;Virtualbox&lt;/a&gt; internally, and supports command line, easy ssh access,
easy distribution, shared folders, and other goodies.&lt;/p&gt;

&lt;p&gt;You can even package your own boxes, and distribute it to all of your team members.
One box to rule them all.&lt;/p&gt;

&lt;h3&gt;Installation&lt;/h3&gt;

&lt;p&gt;You will require &lt;em&gt;ruby&lt;/em&gt;, &lt;em&gt;rubygems&lt;/em&gt;, and &lt;em&gt;virtualbox 4&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;    gem install vagrant
    vagrant --help
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h3&gt;Creating a new box&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;    mkdir ~/Vagrants;
    &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/Vagrants/;
    vagrant box add base http://files.vagrantup.com/lucid32.box;
    vagrant init
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Notes:&lt;/em&gt;
The &lt;code&gt;vagrant box add&lt;/code&gt; command will download a pre-created ubuntu linux system
(so ~260Mb will be downloaded)
Vagrant uses one configuration file per box, and it's called &lt;code&gt;VagrantFile&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;Starting your box&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;    &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/Vagrants/;
    vagrant up
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;And that's it. Now you have a new Linux environment ready to be configured
and installed with your software, servers, services, etc.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; if you require direct access from the outside to your box, just enable ssh
access editing the &lt;code&gt;VagrantFile&lt;/code&gt;, and uncommenting this: &lt;code&gt;config.vm.network &quot;33.33.33.10&quot;&lt;/code&gt;.
For example, if you're configuring a MySQL instance, your client will connect to 33.33.33.10:3606.&lt;/p&gt;

&lt;h3&gt;Accessing it&lt;/h3&gt;

&lt;p&gt;Now, to install your servers, all you need to do is log in to the box,
do some apt-get install, configure your settings.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;    &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/Vagrants/;
    vagrant ssh
    &lt;span class=&quot;c&quot;&gt;# sudo apt-get install your-stuff-1.2.3&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h3&gt;Power OFF, suspend, resume..&lt;/h3&gt;

&lt;p&gt;It's as easy as:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;    &lt;span class=&quot;n&quot;&gt;vagrant&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;halt&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;vagrant&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;suspend&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;vagrant&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resume&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;vagrant&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destroy&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h2&gt;And that's it&lt;/h2&gt;

&lt;p&gt;Now it's your turn. Try it, learn it, use it, enjoy it.
&lt;em&gt;And, see you next time!&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;More info&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;More info at: &lt;a href=&quot;http://vagrantup.com&quot;&gt;vagrantup.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;And thanks to &lt;a href=&quot;https://twitter.com/#!/softr8&quot;&gt;Edwin&lt;/a&gt;, for his first Vagrant explanation.&lt;/li&gt;
&lt;/ul&gt;

</content>
   <author>
     <name>Mario Zaizar</name>
     <email>mario@crowdint.com</email>
   </author>
 </entry>
 
 <entry>
   <title>Add Validations to your Ruby classes</title>
   <link href="http://blog.crowdint.com/2011/06/13/add-validations-to-your-ruby-classes.html"/>
   <updated>2011-06-13T00:00:00-05:00</updated>
   <id>http://blog.crowdint.com/2011/06/13/add-validations-to-your-ruby-classes</id>
   <photo>433031df4018635dfb177f4066c37a3b</photo>
   <content type="html">&lt;p&gt;Validations are one of the most useful things in ActiveRecord.
To use them all you have to do is make your class inherit from ActiveRecord::Base,
but, what if you don't want to save the records in a database?
Does it make sense to use ActiveRecord and its overload only for validations?
In case you're wondering, the answer is NO.&lt;/p&gt;

&lt;p&gt;Fortunately, in Rails 3, validations were moved from &lt;em&gt;ActiveRecord&lt;/em&gt; to
&lt;em&gt;ActiveModel&lt;/em&gt;. This give us the ability to use validations in our ruby
classes very easily, even if you don't want to use ActiveRecord.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;    &lt;span class=&quot;c1&quot;&gt;# contact.rb&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Contact&lt;/span&gt;
      &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Validations&lt;/span&gt;
      
      &lt;span class=&quot;kp&quot;&gt;attr_accessor&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;
      
      &lt;span class=&quot;n&quot;&gt;validates&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:presence&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
      
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;By including the &lt;em&gt;ActiveModel::Validations&lt;/em&gt; module in our class we are able
to use methods like the following&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;    &lt;span class=&quot;n&quot;&gt;contact&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Contact&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;valid?&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;or&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;    &lt;span class=&quot;n&quot;&gt;contact&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; {:name=&amp;gt;[&amp;quot;can&amp;#39;t be blank&amp;quot;]}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;We can use all of
the &lt;a href=&quot;http://edgeguides.rubyonrails.org/3_0_release_notes.html#validations&quot;&gt;Rails 3 Validations&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Hope this may help you&lt;/p&gt;
</content>
   <author>
     <name>Omar Vargas</name>
     <email>omar@crowdint.com</email>
   </author>
 </entry>
 
 <entry>
   <title>Railsconf 2011</title>
   <link href="http://blog.crowdint.com/2011/05/24/railsconf-2011.html"/>
   <updated>2011-05-24T00:00:00-05:00</updated>
   <id>http://blog.crowdint.com/2011/05/24/railsconf-2011</id>
   <photo>d32b52ec6403614b1adf3e648cbbe584</photo>
   <content type="html">&lt;p&gt;Last week, a good part of our team flew to Baltimore for Railsconf 2011. As
every year, it was a ton of fun, there was a lot to learn and it was inspiring.&lt;/p&gt;

&lt;p&gt;I love going to conferences, not just because of the talks, but, because you
get to meet people. I like talking to the persons that wrote the gems that
I use everyday and thank them for their effort in creating awesome code so
we don't have to.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2011/05/24/guns.jpg&quot; alt=&quot;The Crowd Interactive team&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And not just gem writers, it's also fun to meet all those other Ruby
developers that enjoy using Rails and everything else as much as I do.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2011/05/24/sign.jpg&quot; alt=&quot;The sign&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The best thing you can take out of the experience is inspiration.
Inspiration to follow the leaders. Inspiration to collaborate to open
source. Or, as Corey Haines said on his keynote, inspiration to be awesome.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2011/05/24/friends.jpg&quot; alt=&quot;Friends at Railsconf&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Since we enjoy conferences so much, last year we were bummed that there was not
a lot of Ruby conferences in Mexico so we organized
&lt;a href=&quot;http://www.magmarails.com&quot;&gt;Magma Rails&lt;/a&gt;, and it ended
up being better than expected. this year we're organizing its second edition
and it's going to be twice as awesome as last year.&lt;/p&gt;

&lt;p&gt;We're moving to Manzanillo Colima, since this year we are inviting people
from all over the world, it makes more sense to have it at a tourist friendly
city. You will be able to smell the ocean from your seat.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.magmarails.com&quot;&gt;
&lt;img src=&quot;http://www.magmarails.com/images/foto-magma.png&quot; alt=&quot;Last year&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Right now we're looking for &lt;a href=&quot;http://www.magmarails.com/callforpapers&quot;&gt;speakers&lt;/a&gt;
and sponsors, contact us if you're interested. I promise it will be a lot of fun!&lt;/p&gt;
</content>
   <author>
     <name>David Padilla</name>
     <email>david@crowdint.com</email>
   </author>
 </entry>
 
 <entry>
   <title>How to override destroy method keeping the callbacks</title>
   <link href="http://blog.crowdint.com/2011/05/02/How-to-override-destroy-with-callbacks.html"/>
   <updated>2011-05-02T00:00:00-05:00</updated>
   <id>http://blog.crowdint.com/2011/05/02/How-to-override-destroy-with-callbacks</id>
   <photo>ec9ab4537f5224def5fc54cd7465008b</photo>
   <content type="html">&lt;p&gt;While working on a project, we were required to override the
destroy method in order to create a soft delete method, in other words
to change the active state of the object to deleted instead of deleting
it from the database.&lt;/p&gt;

&lt;p&gt;That was no problem at all, but, issues came when we needed this method to use
callbacks in order for the counter caches to work properly.&lt;/p&gt;

&lt;p&gt;In Rails 2 you can override the destroy method without affecting callbacks
by overriding the method &lt;em&gt;destroy_without_callbacks&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;destroy_without_callbacks&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_record?&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# your code here&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;freeze&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;But in Rails 3 things have changed and the previous methods won't
work. So, after some research, we found out that you can call the method
callbacks with the run_callbacks method from ActiveSupport&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;destroy&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;run_callbacks&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:destroy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# your code here&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;In this case we use it for the destroy method, but you can use it for
any method you override and need their callbacks. If you don't specify
any callbacks, all callbacks will be called.&lt;/p&gt;

&lt;p&gt;You can find more info
&lt;a href=&quot;http://api.rubyonrails.org/classes/ActiveSupport/Callbacks.html&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope this may help you in your overriding tasks.&lt;/p&gt;
</content>
   <author>
     <name>Ana Rosas &amp; Omar Vargas</name>
     <email>ana.rosas+omar.vargas@crowdint.com</email>
   </author>
 </entry>
 
 <entry>
   <title>One File Web Page with Rack</title>
   <link href="http://blog.crowdint.com/2011/04/25/one-file-web-page-with-rack.html"/>
   <updated>2011-04-25T00:00:00-05:00</updated>
   <id>http://blog.crowdint.com/2011/04/25/one-file-web-page-with-rack</id>
   <photo>a302e7dd208f335dc67761a6db911561</photo>
   <content type="html">&lt;p&gt;There are times when you need to quickly create small &lt;strong&gt;Ruby&lt;/strong&gt; web
applications. You can do that in many different ways like, creating a
&lt;strong&gt;Rails&lt;/strong&gt;, &lt;strong&gt;Sinatra&lt;/strong&gt; or &lt;strong&gt;Rack&lt;/strong&gt; application.&lt;/p&gt;

&lt;p&gt;I like &lt;strong&gt;Rack&lt;/strong&gt;, it gives you more than enough tools to build a web page, and
allows you to have full control of the components that you employ to
build it.&lt;/p&gt;

&lt;p&gt;In this article I'll show some examples about how to create simple one page
&lt;em&gt;Rack&lt;/em&gt; web applications.&lt;/p&gt;

&lt;p&gt;For a bigger overview about &lt;strong&gt;Rack&lt;/strong&gt; look at this article:
&lt;a href=&quot;http://blog.crowdint.com/2010/11/17/rack-basics-a-rack-introduction.html&quot;&gt;Rack Basics - A Rack Introduction&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also remember, a middleware is nothing more than another &lt;strong&gt;Rack&lt;/strong&gt;
application, and, &lt;strong&gt;Rack&lt;/strong&gt; middlewares can be stacked up in order to compose
bigger systems.&lt;/p&gt;

&lt;h2&gt;Examples source code&lt;/h2&gt;

&lt;p&gt;You can download and run the examples by following the next steps:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;  git clone git://gist.github.com/935008.git gist-935008
  &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;gist-935008
  gem install bundler &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; bundle install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h2&gt;Hello world&lt;/h2&gt;

&lt;p&gt;Let's start by building a simple hello world example, save the following
code as &lt;em&gt;hello.ru&lt;/em&gt;:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/935008.js?file=hello1.ru&quot;&gt;&lt;/script&gt;


&lt;p&gt;Now, run the &lt;em&gt;hello.ru&lt;/em&gt; app with:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;  rackup hello.ru
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;Optionally you may specify what port you want your application to run
at:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;  rackup hello.ru -p 8080
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;And then, go to &lt;a href=&quot;http://localhost:9292/&quot;&gt;http://localhost:9292/&lt;/a&gt; or
&lt;a href=&quot;http://localhost:8080/&quot;&gt;http://localhost:8080/&lt;/a&gt; (depending on what port
you specified), so you can see your app alive.&lt;/p&gt;

&lt;p&gt;Creating an application in this way, requires you to manually specify the
headers, just as I did when I added the &lt;em&gt;Content-Length&lt;/em&gt; and
&lt;em&gt;Content-Type&lt;/em&gt; headers. Also, this can be accomplished in a simpler way
by using the &lt;strong&gt;Rack::ContentLength&lt;/strong&gt; and &lt;strong&gt;Rack::ContentType&lt;/strong&gt; middlewares:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/935008.js?file=hello2.ru&quot;&gt;&lt;/script&gt;


&lt;p&gt;OK, now let's add ERB rendering to this example.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/935008.js?file=hello3.ru&quot;&gt;&lt;/script&gt;


&lt;p&gt;Now, run the script again. You should see the &lt;em&gt;Hello World&lt;/em&gt; message.&lt;/p&gt;

&lt;p&gt;In order to show one last example let's write our view using
&lt;strong&gt;HAML&lt;/strong&gt;, and passing variables to the view:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/935008.js?file=hello4.ru&quot;&gt;&lt;/script&gt;


&lt;p&gt;Run the script again. You should see the &lt;em&gt;Hello World&lt;/em&gt; message.&lt;/p&gt;

&lt;p&gt;That's it, you've seen how to create web pages by simply using
&lt;strong&gt;Rack&lt;/strong&gt;, no frameworks, just &lt;strong&gt;Rack&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Thank you for your reading.&lt;/p&gt;
</content>
   <author>
     <name>Emmanuel Delgado</name>
     <email>emmanuel.delgado@crowdint.com</email>
   </author>
 </entry>
 
 <entry>
   <title>Turn jQuery effects off for testing</title>
   <link href="http://blog.crowdint.com/2011/04/13/turn-jquery-effects-off-for-testing.html"/>
   <updated>2011-04-13T00:00:00-05:00</updated>
   <id>http://blog.crowdint.com/2011/04/13/turn-jquery-effects-off-for-testing</id>
   <photo>d32b52ec6403614b1adf3e648cbbe584</photo>
   <content type="html">&lt;p&gt;We, at &lt;a href=&quot;http://www.crowdint.com&quot;&gt;Crowd Interactive&lt;/a&gt;, always go with the
TDD + BDD approach when coding new applications.&lt;/p&gt;

&lt;p&gt;The usual, we use &lt;a href=&quot;http://www.rspec.info&quot;&gt;RSpec&lt;/a&gt; for TDD, we use
&lt;a href=&quot;http://cukes.info&quot;&gt;Cucumber&lt;/a&gt; for BDD, although
lately, I've been using &lt;a href=&quot;https://github.com/cavalle/steak&quot;&gt;Steak&lt;/a&gt; in place of
Cucumber and so far I am loving it.&lt;/p&gt;

&lt;p&gt;When you are using Capybara + Selenium for testing with Cucumber or
Steak, sometimes you can get an error when you write tests for clicks that are
followed by an animation.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;scenario&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;New resource&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;click_link&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;New Resource&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Shows up an overlay window with the form that&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# takes 5 seconds to show up&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;fill_in&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:with&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Some value&amp;#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;You get the following error:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Selenium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;WebDriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ElementNotDisplayedError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Element&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currently&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visible&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;so&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;may&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interacted&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;This happens because Capybara is trying to access the input element, but
since the animation is still happening it is not visible yet.&lt;/p&gt;

&lt;p&gt;To avoid this, you can simply tell jQuery to turn off all effects when
in test mode.&lt;/p&gt;

&lt;p&gt;How? Very simple.&lt;/p&gt;

&lt;p&gt;All you have to do is add this line within the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;
section of your layout.&lt;/p&gt;

&lt;h3&gt;Haml&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;haml&quot;&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;javascript_tag&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;$.fx.off = true;&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h3&gt;ERB&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;erb&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;javascript_tag&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;$.fx.off = true;&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;test?&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;This way, every time you run your tests you will be telling jQuery to disable
all effects and your test will pass, and, in some cases, even perform faster.&lt;/p&gt;

&lt;p&gt;You can &lt;a href=&quot;http://api.jquery.com/jQuery.fx.off/&quot;&gt;read the documentation here&lt;/a&gt; for more info on
how to disable jQuery effects off.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;
</content>
   <author>
     <name>David Padilla</name>
     <email>david@crowdint.com</email>
   </author>
 </entry>
 
 <entry>
   <title>How to Sinatra + Haml + Compass(SCSS) + Blueprint</title>
   <link href="http://blog.crowdint.com/2011/04/06/sinatra-haml-compass-blueprint.html"/>
   <updated>2011-04-06T00:00:00-05:00</updated>
   <id>http://blog.crowdint.com/2011/04/06/sinatra-haml-compass-blueprint</id>
   <photo>fa56812143dd6049ef19d1a8032f21da</photo>
   <content type="html">&lt;p&gt;Last week, I spent about half a day trying to get Sinatra working
with Compass and Blueprint. At first, it was a pain in the ass because the
documentation is pretty lame. But after some reading here and there and
trying via command line, I failed again and again.&lt;/p&gt;

&lt;p&gt;But, don't despair, there is hope... I got it to work eventually and here is how I did it:&lt;/p&gt;

&lt;p&gt;First of all, you have to setup your sinatra app as usual.
If you have read
&lt;a href=&quot;http://blog.crowdint.com/2011/03/14/Sinatra-the-green-way.html&quot;&gt;Omar's post about setting up your sinatra app with test&lt;/a&gt;
you know what I'm talking about. Take a look at it if you haven't.&lt;/p&gt;

&lt;p&gt;It is very easy to setup your sinatra apps, a couple of minutes and you're done.&lt;/p&gt;

&lt;p&gt;You can also fork my ready-to-use github repo &lt;a href=&quot;http://github.com/hecbuma/sinatra-blueprint&quot;&gt;Sinatra+Haml+Compas+Blueprint&lt;/a&gt;
and make your changes there.&lt;/p&gt;

&lt;h2&gt;The real deal&lt;/h2&gt;

&lt;p&gt;Ok, now that we have our sinatra app, it's time to add some stuff so we are able
to use Haml and Compass.&lt;/p&gt;

&lt;p&gt;First add these gems to you Gemfile (Compass and Haml). You will end up with something like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;http://rubygems.org&amp;quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;compass&amp;#39;&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sinatra&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;haml&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;cucumber&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;cucumber-sinatra&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;capybara&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rspec&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;Now you have to add a config file for compass:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mkdir config
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;touch compass.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;and add this content to it:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defined?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Sinatra&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# This is the configuration to use when running within sinatra&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;project_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sinatra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;environment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:development&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# this is the configuration to use when running within the compass command line tool.&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;css_dir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;public&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;stylesheets&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;relative_assets&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;environment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:production&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# This is common configuration&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sass_dir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;views&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;stylesheets&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;images_dir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;public&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;images&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;http_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;http_images_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/images&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;http_stylesheets_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/stylesheets&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;Note that I've changed the css_dir and the image dir to use &quot;public&quot; instead of &quot;static&quot;&lt;/p&gt;

&lt;p&gt;Ok, we are half way there.&lt;/p&gt;

&lt;p&gt;Now, let's add some more configuration for compass, but this time in your app file (myapp.rb):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;compass&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sinatra&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;haml&amp;#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:haml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:format&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:html5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:escape_html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:scss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:style&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:compact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:debug_info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Compass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_project_configuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Sinatra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;config&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;compass.rb&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/stylesheets/:name.css&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;content_type&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;text/css&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:charset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;scss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:&amp;quot;stylesheets/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;haml&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:index&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;With this you are telling compass to automatically convert SCSS files into CSS files.&lt;/p&gt;

&lt;p&gt;And the final touch: let's setup blueprint for this project.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;compass install blueprint
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;And that is all. I hope this is helpful for you.&lt;/p&gt;
</content>
   <author>
     <name>Hector Bustillos</name>
     <email>hector.bustillos@crowdint.com</email>
   </author>
 </entry>
 
 <entry>
   <title>Trying to make your Sinatra more RESTful?</title>
   <link href="http://blog.crowdint.com/2011/03/31/make-your-sinatra-more-restful.html"/>
   <updated>2011-03-31T00:00:00-06:00</updated>
   <id>http://blog.crowdint.com/2011/03/31/make-your-sinatra-more-restful</id>
   <photo>cd962d009c918bfc2dc6e63fc1b3b5cb</photo>
   <content type="html">&lt;p&gt;&lt;small&gt;&lt;code&gt;TODO. Write introductions. Include references to some RESTful tutorial. Explain why RESTful is so important.
Add a disclaimer, pray for feedback.
Make funny jokes, like &quot;Why does this guy wears a Mexican hat?&quot;&lt;/code&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;No RESTful knowledge at all? &lt;a href=&quot;http://www.b-simple.de/documents&quot;&gt;read this!&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;REST URLs should be multi-response&lt;/h3&gt;

&lt;p&gt;In rails we can use &lt;a href=&quot;http://www.tokumine.com/2009/09/13/how-does-respond_to-work-in-the-rails-controllers/&quot;&gt;&lt;code&gt;respond_to(format)&lt;/code&gt;&lt;/a&gt; to switch between different layouts, and partials.
So, we just create a helper like &lt;code&gt;request_type?&lt;/code&gt; and switch between the different kinds of views!&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Route&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/book/:title/chapters&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request_type?&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:mobile&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;haml&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:&amp;#39;mobile/chapters&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:layout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:&amp;#39;mobile/layout&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:ajax&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;haml&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:chapters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:layout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# json&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;haml&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:chapters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:layout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:&amp;#39;static/layout&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Helper&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;request_type?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:mobile&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mobile_request?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:ajax&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xhr?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:normal&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;Avoid having different routes for the same &lt;code&gt;resource/action&lt;/code&gt;, like &lt;code&gt;/m/register&lt;/code&gt; and &lt;code&gt;/user/new&lt;/code&gt; doing the same thing.
Create one route than actually makes sense, and just play with the response type.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Or even simpler!
Thanks to &lt;a href=&quot;http://twitter.com/chischaschos&quot;&gt;Emmanuel&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mobile_request?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:&amp;#39;mobile/chapters&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:&amp;#39;mobile/layout&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:&amp;#39;chapters&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;haml&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h3&gt;&quot;Fat models, skinny &lt;strike&gt;controllers&lt;/strike&gt; routes&quot;&lt;/h3&gt;

&lt;p&gt;Move your ugly controller-based validations &lt;a href=&quot;http://weblog.jamisbuck.org/2006/10/18/skinny-controller-fat-model&quot;&gt;to your models&lt;/a&gt;, like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# This is wrong&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;user/new&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;halt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;user exists&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;halt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;empty email&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blank?&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;Use helpers like &lt;a href=&quot;&quot;&gt;&lt;code&gt;error_messages_for(@user)&lt;/code&gt;&lt;/a&gt; with the model validations:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Model&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;validate_uniqueness_for&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;validate_presence_for&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Route&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;user/name&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error_messages_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# =&amp;gt; &amp;#39;Email can&amp;#39;t be blank and it&amp;#39;s already taken.&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Helpers&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;error_messages_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;all_errors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errors&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;capitalize&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;what_is_wrong&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39; and &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;all_errors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;what_is_wrong&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;all_errors&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h3&gt;Start using route &quot;Filters&quot;&lt;/h3&gt;

&lt;p&gt;If you are using the same sentence in a several routes, like:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# /user/001/ + dash&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/user/:uid/dash&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;require_login!&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logged?&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# /user/001/ + other&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/user/:uid/other&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;require_login!&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logged?&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;Start using &lt;a href=&quot;http://sinatra-book.gittr.com/&quot;&gt;Sinatra's filters&lt;/a&gt; as &lt;code&gt;before&lt;/code&gt; or &lt;code&gt;after&lt;/code&gt;. They can be string matched! like &lt;code&gt;before '/this/*'&lt;/code&gt;
(wildcards) or &lt;code&gt;after /^(this|other)$/&lt;/code&gt; (regex)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# /user/001/*&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;before&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/user/:uid/*&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;require_login!&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logged?&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/user/:uid/dash&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/user/:uid/other&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h3&gt;Better error messaging&lt;/h3&gt;

&lt;p&gt;Improve your multi-response routes, handling the correct messages for.
&lt;u&gt;For example&lt;/u&gt; use flash/notices for mobiles, json for ajax or jGrowls, and so on...&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/users/new&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request_type?&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:mobile&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;flash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Ups, something goes wrong.&amp;#39;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;redirect&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;back&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:ajax&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Ups, something goes wrong.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;401&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_json&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h3&gt;Doing the same thing, but using different requests?&lt;/h3&gt;

&lt;p&gt;Are you doing the same code, with the same route but only changing the http-verb?
I do, and I found this: &lt;a href=&quot;http://nuclearsquid.com/writings/multi-routing.html&quot;&gt;Multi-Routing in Sinatra&lt;/a&gt;
to use 'any' when you need the same route action for different methods (http verbs).&lt;/p&gt;

&lt;p&gt;For example having these routes:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/user/:id&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/user/:id&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;put&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/user/:id&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/user/:id&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;You can use:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;any&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/user/:id&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h3&gt;Be flexible with your route endings&lt;/h3&gt;

&lt;blockquote&gt;&lt;p&gt;I recommend that you enable your routes with/without last slash &quot;/&quot;,
but I found that some RESTul projects prefer all urls without slashes.
So, there is a separate opinions... &lt;a href=&quot;http://www.standardzilla.com/2007/07/09/dont-forget-your-trailing-slash/]&quot;&gt;1&lt;/a&gt;, &lt;a href=&quot;http://www.projectzero.org/sMash/1.0.x/docs/zero.devguide.doc/zero.core/REST.html]&quot;&gt;2&lt;/a&gt;
The truth is that adding an extra slash to the end is not that big of a deal. Don't you think so?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;For example having:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# This will raise a 404 if you go to &amp;#39;/users/001/friends/&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/users/:uid/friends&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;The solution is pretty simple, just add &lt;code&gt;/?&lt;/code&gt; at the end of your routes.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# this will work with: /users/:uid/friends and /users/:uid/friends/&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/users/:uid/friends/?&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h2&gt;See you next time!&lt;/h2&gt;

&lt;p&gt;May the Source Be With You.&lt;/p&gt;

&lt;h2&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;rest_rails&quot;&gt;RESTful Rails Development&lt;/a&gt; Excellent tutorial about RESTul and Rails&lt;/li&gt;
&lt;/ul&gt;

</content>
   <author>
     <name>Mario Zaizar</name>
     <email>mario@crowdint.com</email>
   </author>
 </entry>
 
 <entry>
   <title>How to write good CSS</title>
   <link href="http://blog.crowdint.com/2011/03/24/how-to-write-good-css.html"/>
   <updated>2011-03-24T00:00:00-06:00</updated>
   <id>http://blog.crowdint.com/2011/03/24/how-to-write-good-css</id>
   <photo>fa56812143dd6049ef19d1a8032f21da</photo>
   <content type="html">&lt;p&gt;After a while of working with CSS, in different projects and with
different people, I have realized that there is a lack of standards for
it. Like, when you have to make some corrections or improvements and open
the CSS file and you get a thousand lines of code with no comments at
all.&lt;/p&gt;

&lt;p&gt;Well, I have a couple Ideas of how CSS should be coded:&lt;/p&gt;

&lt;h2&gt;The ABC of CSS&lt;/h2&gt;

&lt;h3&gt;Keep it simple.&lt;/h3&gt;

&lt;p&gt;Imagine that every time you write a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; tag somebody kicks you in the nuts,
painful huh?... Use only the necessary div tags. Think twice before writing a
one, because if you don’t care about it you will get a super complex page.
Always remember to keep it simple.&lt;/p&gt;

&lt;h3&gt;Use HTML tags for their propose&lt;/h3&gt;

&lt;p&gt;I'm always finding some code like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;   &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Potatoes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Apples&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Watermelons&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Oranges&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Cucumbers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;As you see, it's a common list an instead of using &lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; its using a &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;A better way to do this would be:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Potatoes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Apples&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Watermelons&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Oranges&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Cucumbers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;You &lt;strong&gt;must&lt;/strong&gt; use the correct tag; if you are not familiar with all of them
take a look at &lt;a href=&quot;http://w3schools.com/tags/default.asp&quot;&gt;w3schools html reference&lt;/a&gt;.
Here you will find the complete list of tags with examples and everything you need.&lt;/p&gt;

&lt;p&gt;Also, this is important because, it is easier for search engines to
identify your page and understand its code. Remember that search engines
are like a blind users.&lt;/p&gt;

&lt;h3&gt;Use comments&lt;/h3&gt;

&lt;p&gt;Try to put comments on your CSS. It is easier for others to see the comments and
know what the styles are being used for.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;  &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Common&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;tags&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;styles&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;text-transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;uppercase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Header&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;styles&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;#header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#FFFFFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nf&quot;&gt;#header&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Left&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Menu&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;styles&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;#left-menu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.8em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h3&gt;Avoid absolute positions&lt;/h3&gt;

&lt;p&gt;When you start making CSS, you can find it &quot;easy&quot; to put every element on
the right place using absolute position. This is a very common, yet
incorrect
method to align your elements. Sometimes when you use absolute positions,
you will get weird behavior after a window resize or in different
browsers or screens, just try to avoid it and use margins and
paddings to do the work.  Always remember &lt;a href=&quot;http://www.w3.org/TR/CSS21/box.html&quot;&gt;the box model&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Ok, First steps&lt;/h2&gt;

&lt;h3&gt;Reset your CSS&lt;/h3&gt;

&lt;p&gt;Did you ever realize the huge differences between the browser when you put
a text into a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; or inside &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;? You will always face a couple of differences in
how each browser renders the elements.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2011/renders.jpg&quot; title=&quot;Renders&quot; alt=&quot;Diferent renders&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This happens because the browsers have different ways to render the elements
of a page. An easy way to avoid this is by resetting your CSS, a simple
technique where you put all the style to 0/none by default.
You can achieve this by applying &lt;a href=&quot;http://meyerweb.com/eric/tools/css/reset/index.html&quot;&gt;Eric Meyer's css reset&lt;/a&gt;,
download it and put it on your public folder, or link to the url
directly.&lt;/p&gt;

&lt;h3&gt;Styles for tags first&lt;/h3&gt;

&lt;p&gt;I prefer to write styles for tags first, it’s something like starting from
the general to the particular. In other words, make it general, and use
exceptions only when it is really necessary.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;  &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Arial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1.2em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nc&quot;&gt;.secondary_pages&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Verdana&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h3&gt;Be modular&lt;/h3&gt;

&lt;p&gt;Remember to separate your CSS like modules, first, the body definitions,
then the header definitions, and so on.
Also separate them by files like &lt;strong&gt;main.css&lt;/strong&gt; and &lt;strong&gt;form.css&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;  &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Header&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;CSS&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;#header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#FFFFFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;#header&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Left&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Menu&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;#left-menu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;.8em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;text-transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;uppercase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h3&gt;Do you feel like I am re-writing the whole bible? (Old and new testament!)&lt;/h3&gt;

&lt;p&gt;Sometimes you start to write CSS and then you get velocity, or you have a
deadline, then you get yourself coding like a mad man. Tons and tons of CSS
lines. Then, you end up with like 10 different files with a thousand lines on
each one.&lt;/p&gt;

&lt;p&gt;Well if you end up having that, you are doing it completely wrong.&lt;/p&gt;

&lt;p&gt;Take your time to write the CSS, once you get the expected result,
take a look at your code and try to clean the clean it.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.&lt;/p&gt;

&lt;h4&gt;Antoine de Saint-Exupery &lt;em&gt;French writer (1900 - 1944)&lt;/em&gt;&lt;/h4&gt;&lt;/blockquote&gt;

&lt;p&gt;There's always a way to make your code look better. If you take care about
it you will get maintainable, very easy to read and understandable code.&lt;/p&gt;

&lt;h3&gt;Cross-browser testing &lt;strong&gt;ALWAYS&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;I highlighted &quot;always&quot; with caps and bold, because it is something that we
forget about very often. We write and write CSS lines, and we test on Firefox or
Chrome because we love those browsers, and we are very happy about the way
our site looks, then after a couple of days of coding, you start thinking
about how it will look on IE... that awfulness all web developers fear to
see their work on. You test in IE and you realize that the entire
site is messed up, the whole layout is broken.&lt;/p&gt;

&lt;p&gt;You don’t know where to start but you do it anyway.
Begin making changes here and there and you finish with tons
of patches or writing a new CSS file just for IE.&lt;/p&gt;

&lt;p&gt;That’s not necessary if you take into consideration what you are doing right
from the first step. If you wrote 2 lines, verify in all browsers that your
style is working right. By doing this you will end with clean code and
compatible with all browsers.&lt;/p&gt;

&lt;h3&gt;Remember the W3C&lt;/h3&gt;

&lt;p&gt;Always keep in mind the standards and validate your site using the
&lt;a href=&quot;http://jigsaw.w3.org/css-validator/&quot;&gt;CSS&lt;/a&gt; and
&lt;a href=&quot;http://validator.w3.org/&quot;&gt;HTML&lt;/a&gt; validators. If your code passes the validation, your site will
be readable for all browsers for sure.&lt;/p&gt;

&lt;h3&gt;My final words&lt;/h3&gt;

&lt;p&gt;All suggestions regarding good CSS writing, are about taking care of the
details.  Details make the difference, you only have to put some attention
and code in the right way.  Remeber that sometimes your code is gonna be
seen by other developers and you have to make it clear for them and for the
browsers too.&lt;/p&gt;

&lt;p&gt;Also remember the accessibility of your site, think of the people at all
times... people with some illness or different capacities, like the blind
people and so on. You can check the &lt;a href=&quot;http://www.w3.org/TR/WCAG10/&quot;&gt;Web Content Accessibility Guidelines&lt;/a&gt;
and try to at least complete the guides for Level A, the visitors of your
site will be grateful about this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And for God’s sake... Code clean!!!!&lt;/strong&gt;&lt;/p&gt;
</content>
   <author>
     <name>Hector Bustillos</name>
     <email>hector.bustillos@crowdint.com</email>
   </author>
 </entry>
 
 
</feed>
